/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Claimable } from "../Claimable";

export class Claimable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Claimable> {
    return super.deploy(overrides || {}) as Promise<Claimable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Claimable {
    return super.attach(address) as Claimable;
  }
  connect(signer: Signer): Claimable__factory {
    return super.connect(signer) as Claimable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Claimable {
    return new Contract(address, _abi, signerOrProvider) as Claimable;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "InBlacklisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "OutBlacklisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ValueReceived",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "addBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "claimValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "dropBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlacklist",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "isBlacklisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e34806100206000396000f3fe60806040526004361061007f5760003560e01c80639cfe42da1161004e5780639cfe42da14610142578063a060351014610162578063f2fde38b14610182578063fe575a87146101a257600080fd5b8063338d6c30146100b8578063715018a6146100e3578063882da331146100fa5780638da5cb5b1461011a57600080fd5b366100b357604051349033907f7e71433ddf847725166244795048ecf3e3f9f35628254ecbf73605666423349390600090a3005b600080fd5b3480156100c457600080fd5b506100cd6101eb565b6040516100da9190610d52565b60405180910390f35b3480156100ef57600080fd5b506100f861024d565b005b34801561010657600080fd5b506100f8610115366004610cb2565b6102f6565b34801561012657600080fd5b506033546040516001600160a01b0390911681526020016100da565b34801561014e57600080fd5b506100f861015d366004610cb2565b61046b565b34801561016e57600080fd5b506100f861017d366004610ccc565b610626565b34801561018e57600080fd5b506100f861019d366004610cb2565b61077f565b3480156101ae57600080fd5b506101db6101bd366004610cb2565b6001600160a01b031660009081526066602052604090205460ff1690565b60405190151581526020016100da565b6060606580548060200260200160405190810160405280929190818152602001828054801561024357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610225575b5050505050905090565b6033546001600160a01b031633146102ac5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b806001600160a01b03811661034d5760405162461bcd60e51b815260206004820152601f60248201527f4552433230204f4d4e3a204e6f7420416464205a65726f20416464726573730060448201526064016102a3565b6033546001600160a01b031633146103a75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102a3565b6001600160a01b03821660009081526066602052604090205460ff166104215760405162461bcd60e51b815260206004820152602960248201527f4552433230204f4d4e3a20426c61636b6c69737465642057616c6c657420646f6044820152681b89dd08195e1a5cdd60ba1b60648201526084016102a3565b6001600160a01b038216600081815260666020526040808220805460ff19169055517f0b69455eaff3a6d5dbcb8cea85d607f306d08ce4cdcc8a164b07a877e53a5c019190a25050565b806001600160a01b0381166104c25760405162461bcd60e51b815260206004820152601f60248201527f4552433230204f4d4e3a204e6f7420416464205a65726f20416464726573730060448201526064016102a3565b6001600160a01b038216600090815260666020526040902054829060ff161561053e5760405162461bcd60e51b815260206004820152602860248201527f4552433230204f4d4e3a2073656e646572206163636f756e7420697320626c6160448201526718dadb1a5cdd195960c21b60648201526084016102a3565b6033546001600160a01b031633146105985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102a3565b6001600160a01b038316600081815260666020526040808220805460ff1916600190811790915560658054918201815583527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c70180546001600160a01b03191684179055517f8cfdb3b5a1b22bb4b4478f7ae6e8084f22cd24977a5cdedf9812c6dd1ac46e1b9190a2505050565b806001600160a01b03811661067d5760405162461bcd60e51b815260206004820152601f60248201527f4552433230204f4d4e3a204e6f7420416464205a65726f20416464726573730060448201526064016102a3565b6001600160a01b038216600090815260666020526040902054829060ff16156106f95760405162461bcd60e51b815260206004820152602860248201527f4552433230204f4d4e3a2073656e646572206163636f756e7420697320626c6160448201526718dadb1a5cdd195960c21b60648201526084016102a3565b6033546001600160a01b031633146107535760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102a3565b6001600160a01b03841661076f5761076a8361089a565b610779565b6107798484610972565b50505050565b6033546001600160a01b031633146107d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102a3565b6001600160a01b03811661083e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102a3565b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b60405147906000906001600160a01b0384169083908381818185875af1925050503d80600081146108e7576040519150601f19603f3d011682016040523d82523d6000602084013e6108ec565b606091505b505090508061096d5760405162461bcd60e51b815260206004820152604160248201527f45524332303a20416464726573733a20756e61626c6520746f2073656e64207660448201527f616c75652c20726563697069656e74206d6179206861766520726576657274656064820152601960fa1b608482015260a4016102a3565b505050565b6040516370a0823160e01b815230600482015282906000906001600160a01b038316906370a082319060240160206040518083038186803b1580156109b657600080fd5b505afa1580156109ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ee9190610d1e565b604080516001600160a01b03868116602483015260448083018590528351808403909101815260649092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152929350610779928516918691859161096d918591600090610a9f9084908490610b1c565b80519091501561096d5780806020019051810190610abd9190610cfe565b61096d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102a3565b6060610b2b8484600085610b35565b90505b9392505050565b606082471015610b965760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102a3565b843b610be45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102a3565b600080866001600160a01b03168587604051610c009190610d36565b60006040518083038185875af1925050503d8060008114610c3d576040519150601f19603f3d011682016040523d82523d6000602084013e610c42565b606091505b5091509150610c52828286610c5d565b979650505050505050565b60608315610c6c575081610b2e565b825115610c7c5782518084602001fd5b8160405162461bcd60e51b81526004016102a39190610d9f565b80356001600160a01b0381168114610cad57600080fd5b919050565b600060208284031215610cc3578081fd5b610b2e82610c96565b60008060408385031215610cde578081fd5b610ce783610c96565b9150610cf560208401610c96565b90509250929050565b600060208284031215610d0f578081fd5b81518015158114610b2e578182fd5b600060208284031215610d2f578081fd5b5051919050565b60008251610d48818460208701610dd2565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015610d935783516001600160a01b031683529284019291840191600101610d6e565b50909695505050505050565b6020815260008251806020840152610dbe816040850160208701610dd2565b601f01601f19169190910160400192915050565b60005b83811015610ded578181015183820152602001610dd5565b83811115610779575050600091015256fea2646970667358221220e9f6ec30964ad18a609fbaf90ab110942984186c84412c48d68915d1b98413dd64736f6c63430008040033";
