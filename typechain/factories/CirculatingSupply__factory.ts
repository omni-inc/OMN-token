/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { CirculatingSupply } from "../CirculatingSupply";

export class CirculatingSupply__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CirculatingSupply> {
    return super.deploy(overrides || {}) as Promise<CirculatingSupply>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CirculatingSupply {
    return super.attach(address) as CirculatingSupply;
  }
  connect(signer: Signer): CirculatingSupply__factory {
    return super.connect(signer) as CirculatingSupply__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CirculatingSupply {
    return new Contract(address, _abi, signerOrProvider) as CirculatingSupply;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "inOmniWallet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "outOmniWallet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "addOmniWallet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "dropOmniWallet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOmniWallets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "isOmniWallet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610838806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c9578063d4cd1283146100e4578063d740c48a146100f7578063f2fde38b1461010a5761007d565b8063071c0d4a146100825780635c910a69146100aa578063715018a6146100bf575b600080fd5b610095610090366004610760565b61011d565b60405190151581526020015b60405180910390f35b6100b261020c565b6040516100a1919061078e565b6100c76102c9565b005b6033546040516001600160a01b0390911681526020016100a1565b6100956100f2366004610760565b61036d565b610095610105366004610760565b610514565b6100c7610118366004610760565b610645565b6033546000906001600160a01b0316331461017f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03821661019557506000610207565b60655460005b8181101561020057606581815481106101c457634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03858116911614156101ee57600192505050610207565b806101f8816107db565b91505061019b565b5060009150505b919050565b6033546060906001600160a01b031633146102695760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610176565b60658054806020026020016040519081016040528092919081815260200182805480156102bf57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102a1575b5050505050905090565b6033546001600160a01b031633146103235760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610176565b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6000816001600160a01b0381166103c65760405162461bcd60e51b815260206004820152601f60248201527f4552433230204f4d4e3a204e6f7420416464205a65726f2041646472657373006044820152606401610176565b6033546001600160a01b031633146104205760405162461bcd60e51b815260206004820152601760248201527f45524332303a206973206e6f7420746865204f776e65720000000000000000006044820152606401610176565b6065546000805b828110156104d7576065818154811061045057634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03878116911614156104c55760006065828154811061049257634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600191505b806104cf816107db565b915050610427565b506040516001600160a01b038616907f29d5a2719ce0c0ec55e3e7a455ed0a0aa72d701694bc35eaf644cbc276fd44ce90600090a2949350505050565b6000816001600160a01b03811661056d5760405162461bcd60e51b815260206004820152601f60248201527f4552433230204f4d4e3a204e6f7420416464205a65726f2041646472657373006044820152606401610176565b6033546001600160a01b031633146105c75760405162461bcd60e51b815260206004820152601760248201527f45524332303a206973206e6f7420746865204f776e65720000000000000000006044820152606401610176565b6065805460018101825560009182527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c70180546001600160a01b0319166001600160a01b03861690811790915560405190917f6e29664dcb1f27c1518133232ab51c1ce868f182eef54b6859c8fc850be45d4191a250600192915050565b6033546001600160a01b0316331461069f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610176565b6001600160a01b0381166107045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610176565b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600060208284031215610771578081fd5b81356001600160a01b0381168114610787578182fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156107cf5783516001600160a01b0316835292840192918401916001016107aa565b50909695505050505050565b60006000198214156107fb57634e487b7160e01b81526011600452602481fd5b506001019056fea2646970667358221220d8d3c2e7c1aa49a1e51314e86946edaab96523dc82e4f95b5648b2c771f8ffba64736f6c63430008020033";
