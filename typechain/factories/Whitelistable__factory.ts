/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Whitelistable } from "../Whitelistable";

export class Whitelistable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Whitelistable> {
    return super.deploy(overrides || {}) as Promise<Whitelistable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Whitelistable {
    return super.attach(address) as Whitelistable;
  }
  connect(signer: Signer): Whitelistable__factory {
    return super.connect(signer) as Whitelistable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Whitelistable {
    return new Contract(address, _abi, signerOrProvider) as Whitelistable;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "InWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "OutWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "addWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "dropWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getWhitelist",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061074d806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063bb4dade51161005b578063bb4dade5146100cf578063d01f63f5146100e2578063f2fde38b146100f7578063f80f5dd51461010a57600080fd5b80633af32abf14610082578063715018a6146100aa5780638da5cb5b146100b4575b600080fd5b61009561009036600461069c565b61011d565b60405190151581526020015b60405180910390f35b6100b2610154565b005b6033546040516001600160a01b0390911681526020016100a1565b6100b26100dd36600461069c565b6101fd565b6100ea61036a565b6040516100a191906106ca565b6100b261010536600461069c565b6103cc565b6100b261011836600461069c565b6104e7565b60006001600160a01b03821661013557506001919050565b506001600160a01b031660009081526066602052604090205460ff1690565b6033546001600160a01b031633146101b35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b806001600160a01b0381166102545760405162461bcd60e51b815260206004820152601f60248201527f4552433230204f4d4e3a204e6f7420416464205a65726f20416464726573730060448201526064016101aa565b6033546001600160a01b031633146102ae5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101aa565b6001600160a01b03821660009081526066602052604090205460ff166103205760405162461bcd60e51b815260206004820152602160248201527f4552433230204f4d4e3a2057616c6c6574206e6f742077686974656c697374656044820152601960fa1b60648201526084016101aa565b6001600160a01b038216600081815260666020526040808220805460ff19169055517f89919c803882ce650255ed0ea805425d31e884f35072c094b9b5d6b5e4453d939190a25050565b606060658054806020026020016040519081016040528092919081815260200182805480156103c257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116103a4575b5050505050905090565b6033546001600160a01b031633146104265760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101aa565b6001600160a01b03811661048b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101aa565b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b806001600160a01b03811661053e5760405162461bcd60e51b815260206004820152601f60248201527f4552433230204f4d4e3a204e6f7420416464205a65726f20416464726573730060448201526064016101aa565b6033546001600160a01b031633146105985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101aa565b6001600160a01b03821660009081526066602052604090205460ff161561060f5760405162461bcd60e51b815260206004820152602560248201527f4552433230204f4d4e3a2057616c6c657420616c72656164792077686974656c6044820152641a5cdd195960da1b60648201526084016101aa565b6001600160a01b038216600081815260666020526040808220805460ff1916600190811790915560658054918201815583527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c70180546001600160a01b03191684179055517f498772d0a336ce0349224c81490f537c54bff6ee3e80b3fd886da372aada48489190a25050565b6000602082840312156106ad578081fd5b81356001600160a01b03811681146106c3578182fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561070b5783516001600160a01b0316835292840192918401916001016106e6565b5090969550505050505056fea26469706673582212203a0f6fc2db01c310435c02b7723df9713ecd9f49a5c8e8bef2fba8b43c86fdf064736f6c63430008040033";
