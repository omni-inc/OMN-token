/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { OmniTokenV1 } from "../OmniTokenV1";

export class OmniTokenV1__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OmniTokenV1> {
    return super.deploy(overrides || {}) as Promise<OmniTokenV1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OmniTokenV1 {
    return super.attach(address) as OmniTokenV1;
  }
  connect(signer: Signer): OmniTokenV1__factory {
    return super.connect(signer) as OmniTokenV1__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OmniTokenV1 {
    return new Contract(address, _abi, signerOrProvider) as OmniTokenV1;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611469806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063a9059cbb11610071578063a9059cbb1461022a578063cfae32171461023d578063dd62ed3e14610245578063f2fde38b1461027e578063f62d18881461029157600080fd5b80638da5cb5b146101e157806395d89b41146101fc578063a413686214610204578063a457c2d71461021757600080fd5b8063313ce567116100e9578063313ce5671461018157806339509351146101905780635c975abb146101a357806370a08231146101ae578063715018a6146101d757600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102a4565b6040516101309190611286565b60405180910390f35b61014c610147366004611168565b610336565b6040519015158152602001610130565b6067545b604051908152602001610130565b61014c61017c36600461112d565b61034c565b60405160128152602001610130565b61014c61019e366004611168565b610402565b60975460ff1661014c565b6101606101bc3660046110da565b6001600160a01b031660009081526065602052604090205490565b6101df610439565b005b6033546040516001600160a01b039091168152602001610130565b6101236104dd565b6101df610212366004611191565b6104ec565b61014c610225366004611168565b6105b0565b61014c610238366004611168565b61064b565b610123610658565b6101606102533660046110fb565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b6101df61028c3660046110da565b610667565b6101df61029f366004611191565b610782565b6060606880546102b390611387565b80601f01602080910402602001604051908101604052809291908181526020018280546102df90611387565b801561032c5780601f106103015761010080835404028352916020019161032c565b820191906000526020600020905b81548152906001019060200180831161030f57829003601f168201915b5050505050905090565b600061034333848461087a565b50600192915050565b600061035984848461099e565b6001600160a01b0384166000908152606660209081526040808320338452909152902054828110156103e35760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103f785336103f28685611370565b61087a565b506001949350505050565b3360008181526066602090815260408083206001600160a01b038716845290915281205490916103439185906103f2908690611358565b6033546001600160a01b031633146104935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103da565b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6060606980546102b390611387565b6105996040518060600160405280602381526020016113ef6023913960fb805461051590611387565b80601f016020809104026020016040519081016040528092919081815260200182805461054190611387565b801561058e5780601f106105635761010080835404028352916020019161058e565b820191906000526020600020905b81548152906001019060200180831161057157829003601f168201915b505050505083610b81565b80516105ac9060fb906020840190611025565b5050565b3360009081526066602090815260408083206001600160a01b0386168452909152812054828110156106325760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103da565b61064133856103f28685611370565b5060019392505050565b600061034333848461099e565b606060fb80546102b390611387565b6033546001600160a01b031633146106c15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103da565b6001600160a01b0381166107265760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103da565b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff168061079b575060005460ff16155b6107b75760405162461bcd60e51b81526004016103da9061130a565b600054610100900460ff161580156107d9576000805461ffff19166101011790555b6107e1610bcd565b6108276040518060400160405280600881526020016704f4d4e49204170760c41b815250604051806040016040528060048152602001634f4d4e4960e01b815250610c49565b61082f610cc8565b6108516040518060600160405280602281526020016114126022913983610d37565b81516108649060fb906020850190611025565b5080156105ac576000805461ff00191690555050565b6001600160a01b0383166108dc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103da565b6001600160a01b03821661093d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103da565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a025760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103da565b6001600160a01b038216610a645760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103da565b610a6f838383610d7c565b6001600160a01b03831660009081526065602052604090205481811015610ae75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103da565b610af18282611370565b6001600160a01b038086166000908152606560205260408082209390935590851681529081208054849290610b27908490611358565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b7391815260200190565b60405180910390a350505050565b610bc8838383604051602401610b99939291906112c7565b60408051601f198184030181529190526020810180516001600160e01b0316632ced7cef60e01b179052610de2565b505050565b600054610100900460ff1680610be6575060005460ff16155b610c025760405162461bcd60e51b81526004016103da9061130a565b600054610100900460ff16158015610c24576000805461ffff19166101011790555b610c2c610e03565b610c34610e6d565b8015610c46576000805461ff00191690555b50565b600054610100900460ff1680610c62575060005460ff16155b610c7e5760405162461bcd60e51b81526004016103da9061130a565b600054610100900460ff16158015610ca0576000805461ffff19166101011790555b610ca8610e03565b610cb28383610f1b565b8015610bc8576000805461ff0019169055505050565b600054610100900460ff1680610ce1575060005460ff16155b610cfd5760405162461bcd60e51b81526004016103da9061130a565b600054610100900460ff16158015610d1f576000805461ffff19166101011790555b610d27610e03565b610d2f610fb0565b610c34610e03565b6105ac8282604051602401610d4d929190611299565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b179052610de2565b60975460ff1615610bc85760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b60648201526084016103da565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600054610100900460ff1680610e1c575060005460ff16155b610e385760405162461bcd60e51b81526004016103da9061130a565b600054610100900460ff16158015610c34576000805461ffff19166101011790558015610c46576000805461ff001916905550565b600054610100900460ff1680610e86575060005460ff16155b610ea25760405162461bcd60e51b81526004016103da9061130a565b600054610100900460ff16158015610ec4576000805461ffff19166101011790555b603380546001600160a01b0319163390811790915560405181906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610c46576000805461ff001916905550565b600054610100900460ff1680610f34575060005460ff16155b610f505760405162461bcd60e51b81526004016103da9061130a565b600054610100900460ff16158015610f72576000805461ffff19166101011790555b8251610f85906068906020860190611025565b508151610f99906069906020850190611025565b508015610bc8576000805461ff0019169055505050565b600054610100900460ff1680610fc9575060005460ff16155b610fe55760405162461bcd60e51b81526004016103da9061130a565b600054610100900460ff16158015611007576000805461ffff19166101011790555b6097805460ff191690558015610c46576000805461ff001916905550565b82805461103190611387565b90600052602060002090601f0160209004810192826110535760008555611099565b82601f1061106c57805160ff1916838001178555611099565b82800160010185558215611099579182015b8281111561109957825182559160200191906001019061107e565b506110a59291506110a9565b5090565b5b808211156110a557600081556001016110aa565b80356001600160a01b03811681146110d557600080fd5b919050565b6000602082840312156110eb578081fd5b6110f4826110be565b9392505050565b6000806040838503121561110d578081fd5b611116836110be565b9150611124602084016110be565b90509250929050565b600080600060608486031215611141578081fd5b61114a846110be565b9250611158602085016110be565b9150604084013590509250925092565b6000806040838503121561117a578182fd5b611183836110be565b946020939093013593505050565b6000602082840312156111a2578081fd5b813567ffffffffffffffff808211156111b9578283fd5b818401915084601f8301126111cc578283fd5b8135818111156111de576111de6113d8565b604051601f8201601f19908116603f01168101908382118183101715611206576112066113d8565b8160405282815287602084870101111561121e578586fd5b826020860160208301379182016020019490945295945050505050565b60008151808452815b8181101561126057602081850181015186830182015201611244565b818111156112715782602083870101525b50601f01601f19169290920160200192915050565b6020815260006110f4602083018461123b565b6040815260006112ac604083018561123b565b82810360208401526112be818561123b565b95945050505050565b6060815260006112da606083018661123b565b82810360208401526112ec818661123b565b90508281036040840152611300818561123b565b9695505050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000821982111561136b5761136b6113c2565b500190565b600082821015611382576113826113c2565b500390565b600181811c9082168061139b57607f821691505b602082108114156113bc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe4368616e67696e67206772656574696e672066726f6d202725732720746f20272573274465706c6f79696e67206120477265657465722077697468206772656574696e673aa26469706673582212200d38ed0e2ad2f165f7ddd603388a419dcb7988387d2c6875ecf714de793eee8e64736f6c63430008040033";
