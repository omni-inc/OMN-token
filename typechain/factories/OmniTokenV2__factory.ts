/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { OmniTokenV2 } from "../OmniTokenV2";

export class OmniTokenV2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OmniTokenV2> {
    return super.deploy(overrides || {}) as Promise<OmniTokenV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OmniTokenV2 {
    return super.attach(address) as OmniTokenV2;
  }
  connect(signer: Signer): OmniTokenV2__factory {
    return super.connect(signer) as OmniTokenV2__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OmniTokenV2 {
    return new Contract(address, _abi, signerOrProvider) as OmniTokenV2;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506112b0806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a9059cbb11610066578063a9059cbb14610201578063dd62ed3e14610214578063f2fde38b1461024d578063f62d18881461026057600080fd5b8063715018a6146101c15780638da5cb5b146101cb57806395d89b41146101e6578063a457c2d7146101ee57600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a5780635c975abb1461018d57806370a082311461019857600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610273565b60405161011a9190611155565b60405180910390f35b610136610131366004611037565b610305565b604051901515815260200161011a565b6067545b60405190815260200161011a565b610136610166366004610ffc565b61031b565b6040516012815260200161011a565b610136610188366004611037565b6103d1565b60975460ff16610136565b61014a6101a6366004610fa9565b6001600160a01b031660009081526065602052604090205490565b6101c9610408565b005b6033546040516001600160a01b03909116815260200161011a565b61010d6104ac565b6101366101fc366004611037565b6104bb565b61013661020f366004611037565b610556565b61014a610222366004610fca565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b6101c961025b366004610fa9565b610563565b6101c961026e366004611060565b61067e565b60606068805461028290611213565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90611213565b80156102fb5780601f106102d0576101008083540402835291602001916102fb565b820191906000526020600020905b8154815290600101906020018083116102de57829003601f168201915b5050505050905090565b6000610312338484610794565b50600192915050565b60006103288484846108b8565b6001600160a01b0384166000908152606660209081526040808320338452909152902054828110156103b25760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103c685336103c186856111fc565b610794565b506001949350505050565b3360008181526066602090815260408083206001600160a01b038716845290915281205490916103129185906103c19086906111e4565b6033546001600160a01b031633146104625760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103a9565b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b60606069805461028290611213565b3360009081526066602090815260408083206001600160a01b03861684529091528120548281101561053d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103a9565b61054c33856103c186856111fc565b5060019392505050565b60006103123384846108b8565b6033546001600160a01b031633146105bd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103a9565b6001600160a01b0381166106225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103a9565b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff1680610697575060005460ff16155b6106b35760405162461bcd60e51b81526004016103a990611196565b600054610100900460ff161580156106d5576000805461ffff19166101011790555b6106dd610a9b565b6107236040518060400160405280600881526020016704f4d4e49204170760c41b815250604051806040016040528060048152602001634f4d4e4960e01b815250610b17565b61072b610b97565b61076a6040518060400160405280601881526020017f4465706c6f79696e672061204f4d4e4920546f6b656e3a20000000000000000081525083610c06565b815161077d9060fb906020850190610ef4565b508015610790576000805461ff00191690555b5050565b6001600160a01b0383166107f65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103a9565b6001600160a01b0382166108575760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103a9565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661091c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103a9565b6001600160a01b03821661097e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103a9565b610989838383610c4b565b6001600160a01b03831660009081526065602052604090205481811015610a015760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103a9565b610a0b82826111fc565b6001600160a01b038086166000908152606560205260408082209390935590851681529081208054849290610a419084906111e4565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a8d91815260200190565b60405180910390a350505050565b600054610100900460ff1680610ab4575060005460ff16155b610ad05760405162461bcd60e51b81526004016103a990611196565b600054610100900460ff16158015610af2576000805461ffff19166101011790555b610afa610cb1565b610b02610d1b565b8015610b14576000805461ff00191690555b50565b600054610100900460ff1680610b30575060005460ff16155b610b4c5760405162461bcd60e51b81526004016103a990611196565b600054610100900460ff16158015610b6e576000805461ffff19166101011790555b610b76610cb1565b610b808383610dc9565b8015610b92576000805461ff00191690555b505050565b600054610100900460ff1680610bb0575060005460ff16155b610bcc5760405162461bcd60e51b81526004016103a990611196565b600054610100900460ff16158015610bee576000805461ffff19166101011790555b610bf6610cb1565b610bfe610e5e565b610b02610cb1565b6107908282604051602401610c1c929190611168565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b179052610ed3565b60975460ff1615610b925760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b60648201526084016103a9565b600054610100900460ff1680610cca575060005460ff16155b610ce65760405162461bcd60e51b81526004016103a990611196565b600054610100900460ff16158015610b02576000805461ffff19166101011790558015610b14576000805461ff001916905550565b600054610100900460ff1680610d34575060005460ff16155b610d505760405162461bcd60e51b81526004016103a990611196565b600054610100900460ff16158015610d72576000805461ffff19166101011790555b603380546001600160a01b0319163390811790915560405181906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610b14576000805461ff001916905550565b600054610100900460ff1680610de2575060005460ff16155b610dfe5760405162461bcd60e51b81526004016103a990611196565b600054610100900460ff16158015610e20576000805461ffff19166101011790555b8251610e33906068906020860190610ef4565b508151610e47906069906020850190610ef4565b508015610b92576000805461ff0019169055505050565b600054610100900460ff1680610e77575060005460ff16155b610e935760405162461bcd60e51b81526004016103a990611196565b600054610100900460ff16158015610eb5576000805461ffff19166101011790555b6097805460ff191690558015610b14576000805461ff001916905550565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054610f0090611213565b90600052602060002090601f016020900481019282610f225760008555610f68565b82601f10610f3b57805160ff1916838001178555610f68565b82800160010185558215610f68579182015b82811115610f68578251825591602001919060010190610f4d565b50610f74929150610f78565b5090565b5b80821115610f745760008155600101610f79565b80356001600160a01b0381168114610fa457600080fd5b919050565b600060208284031215610fba578081fd5b610fc382610f8d565b9392505050565b60008060408385031215610fdc578081fd5b610fe583610f8d565b9150610ff360208401610f8d565b90509250929050565b600080600060608486031215611010578081fd5b61101984610f8d565b925061102760208501610f8d565b9150604084013590509250925092565b60008060408385031215611049578182fd5b61105283610f8d565b946020939093013593505050565b600060208284031215611071578081fd5b813567ffffffffffffffff80821115611088578283fd5b818401915084601f83011261109b578283fd5b8135818111156110ad576110ad611264565b604051601f8201601f19908116603f011681019083821181831017156110d5576110d5611264565b816040528281528760208487010111156110ed578586fd5b826020860160208301379182016020019490945295945050505050565b60008151808452815b8181101561112f57602081850181015186830182015201611113565b818111156111405782602083870101525b50601f01601f19169290920160200192915050565b602081526000610fc3602083018461110a565b60408152600061117b604083018561110a565b828103602084015261118d818561110a565b95945050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600082198211156111f7576111f761124e565b500190565b60008282101561120e5761120e61124e565b500390565b600181811c9082168061122757607f821691505b6020821081141561124857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212208f2a3f6a8b2a8fc7435421d125487b101338b6279ac334ce8823be06c0fe81a664736f6c63430008040033";
