/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Vesting } from "../Vesting";

export class Vesting__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vesting> {
    return super.deploy(overrides || {}) as Promise<Vesting>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Vesting {
    return super.attach(address) as Vesting;
  }
  connect(signer: Signer): Vesting__factory {
    return super.connect(signer) as Vesting__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Vesting {
    return new Contract(address, _abi, signerOrProvider) as Vesting;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "totalAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "vestingTypeIndex",
        type: "uint256",
      },
    ],
    name: "addAllocations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "frozenWallets",
    outputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "monthlyAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "initialAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "afterDays",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "scheduled",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "monthDelay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "afterDays",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "monthDelay",
        type: "uint256",
      },
    ],
    name: "getMonths",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReleaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "getRestAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "getTransferableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startDay",
        type: "uint256",
      },
    ],
    name: "isStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    name: "mulDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vestingTypes",
    outputs: [
      {
        internalType: "uint256",
        name: "monthlyRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "initialRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "afterDays",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "monthDelay",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "vesting",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061109f806100206000396000f3fe6080604052600436106100c15760003560e01c80638da5cb5b1161007f578063abd225e111610059578063abd225e11461027a578063c632395e1461029a578063e66fa239146102ba578063f2fde38b1461030457600080fd5b80638da5cb5b1461020f578063a851c2e514610237578063aa9a09121461025a57600080fd5b8062b61dd9146100c6578063188ec356146100f95780634eff3d3d1461010c57806353462d6b1461012c578063715018a614610143578063718494031461015a575b600080fd5b3480156100d257600080fd5b506100e66100e1366004610d43565b610324565b6040519081526020015b60405180910390f35b34801561010557600080fd5b50426100e6565b34801561011857600080fd5b506100e6610127366004610e5f565b6103f7565b34801561013857600080fd5b5063600ee3f86100e6565b34801561014f57600080fd5b5061015861045d565b005b34801561016657600080fd5b506101c8610175366004610d43565b606560205260009081526040902080546001820154600283015460038401546004850154600586015460068701546007909701546001600160a01b03909616969495939492939192909160ff9091169088565b604080516001600160a01b0390991689526020890197909752958701949094526060860192909252608085015260a0840152151560c083015260e0820152610100016100f0565b34801561021b57600080fd5b506033546040516001600160a01b0390911681526020016100f0565b61024a610245366004610d5d565b6104da565b60405190151581526020016100f0565b34801561026657600080fd5b506100e6610275366004610e80565b610790565b34801561028657600080fd5b5061024a610295366004610e47565b6107a6565b3480156102a657600080fd5b506100e66102b5366004610d43565b6107d1565b3480156102c657600080fd5b506102da6102d5366004610e47565b610807565b6040805195865260208601949094529284019190915260608301521515608082015260a0016100f0565b34801561031057600080fd5b5061015861031f366004610d43565b61084b565b6001600160a01b038116600090815260656020526040812060058101546007909101548291610352916103f7565b6001600160a01b0384166000908152606560205260408120600201549192509061037c9083610936565b6001600160a01b038516600090815260656020526040812060030154919250906103a7908390610942565b6001600160a01b0386166000908152606560205260409020600101549091508111156103ef57505050506001600160a01b031660009081526065602052604090206001015490565b949350505050565b600063600ee3f8816104098286610942565b90508042101561041e57600092505050610457565b600061042a428361094e565b905060006104508661044a60016104448662278d0061095a565b90610942565b9061094e565b9450505050505b92915050565b6033546001600160a01b031633146104905760405162461bcd60e51b815260040161048790610efa565b60405180910390fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6033546000906001600160a01b031633146105075760405162461bcd60e51b815260040161048790610efa565b825184511461056d5760405162461bcd60e51b815260206004820152602c60248201527f4164647265737320616e6420746f74616c416d6f756e7473206c656e6774682060448201526b6d7573742062652073616d6560a01b6064820152608401610487565b6066828154811061058e57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff166105f15760405162461bcd60e51b815260206004820152601860248201527f56657374696e6720747970652069736e277420666f756e6400000000000000006044820152606401610487565b60006066838154811061061457634e487b7160e01b600052603260045260246000fd5b600091825260208083206040805160a081018252600590940290910180548452600181015492840192909252600282015490830152600381015460608301526004015460ff16151560808201528651909250905b8181101561078157600087828151811061069257634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008783815181106106be57634e487b7160e01b600052603260045260246000fd5b6020026020010151905060006107098985815181106106ed57634e487b7160e01b600052603260045260246000fd5b6020026020010151876000015168056bc75e2d63100000610790565b9050600061074c8a868151811061073057634e487b7160e01b600052603260045260246000fd5b6020026020010151886020015168056bc75e2d63100000610790565b6040880151606089015191925090610768868686868686610966565b505050505050808061077990611022565b915050610668565b506001925050505b9392505050565b60006103ef826107a08686610936565b9061095a565b600063600ee3f8428111806107ba57508242105b156107c85750600092915050565b50600192915050565b6000806107dd83610324565b6001600160a01b038416600090815260656020526040812060010154919250906103ef908361094e565b6066818154811061081757600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401549294509092909160ff1685565b6033546001600160a01b031633146108755760405162461bcd60e51b815260040161048790610efa565b6001600160a01b0381166108da5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610487565b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b60006107898284610fbc565b60006107898284610f84565b60006107898284610fdb565b60006107898284610f9c565b6001600160a01b03861660009081526065602052604090206006015463600ee3f89060ff1661099a5761099a308888610a84565b6000604051806101000160405280896001600160a01b031681526020018881526020018781526020018681526020016109dc868561094290919063ffffffff16565b8152602080820196909652600160408083018290526060928301969096526001600160a01b039a8b16600090815260658852869020835181546001600160a01b0319169c169b909b178b5595820151958a019590955592830151600289015550509081015160038601556080810151600486015560a0810151600586015560c081015160068601805460ff191691151591909117905560e00151600790940193909355505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610ad6908490610adb565b505050565b6000610b30826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610bad9092919063ffffffff16565b805190915015610ad65780806020019051810190610b4e9190610e27565b610ad65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610487565b60606103ef848460008585843b610c065760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610487565b600080866001600160a01b03168587604051610c229190610eab565b60006040518083038185875af1925050503d8060008114610c5f576040519150601f19603f3d011682016040523d82523d6000602084013e610c64565b606091505b5091509150610c74828286610c7f565b979650505050505050565b60608315610c8e575081610789565b825115610c9e5782518084602001fd5b8160405162461bcd60e51b81526004016104879190610ec7565b80356001600160a01b0381168114610ccf57600080fd5b919050565b600082601f830112610ce4578081fd5b81356020610cf9610cf483610f60565b610f2f565b80838252828201915082860187848660051b8901011115610d18578586fd5b855b85811015610d3657813584529284019290840190600101610d1a565b5090979650505050505050565b600060208284031215610d54578081fd5b61078982610cb8565b600080600060608486031215610d71578182fd5b833567ffffffffffffffff80821115610d88578384fd5b818601915086601f830112610d9b578384fd5b81356020610dab610cf483610f60565b8083825282820191508286018b848660051b8901011115610dca578889fd5b8896505b84871015610df357610ddf81610cb8565b835260019690960195918301918301610dce565b5097505087013592505080821115610e09578384fd5b50610e1686828701610cd4565b925050604084013590509250925092565b600060208284031215610e38578081fd5b81518015158114610789578182fd5b600060208284031215610e58578081fd5b5035919050565b60008060408385031215610e71578182fd5b50508035926020909101359150565b600080600060608486031215610e94578283fd5b505081359360208301359350604090920135919050565b60008251610ebd818460208701610ff2565b9190910192915050565b6020815260008251806020840152610ee6816040850160208701610ff2565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b604051601f8201601f1916810167ffffffffffffffff81118282101715610f5857610f58611053565b604052919050565b600067ffffffffffffffff821115610f7a57610f7a611053565b5060051b60200190565b60008219821115610f9757610f9761103d565b500190565b600082610fb757634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610fd657610fd661103d565b500290565b600082821015610fed57610fed61103d565b500390565b60005b8381101561100d578181015183820152602001610ff5565b8381111561101c576000848401525b50505050565b60006000198214156110365761103661103d565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e28a3b15b950ee10d1080553197de3163ddd92802e0060f3f2a72e551b0b373564736f6c63430008040033";
