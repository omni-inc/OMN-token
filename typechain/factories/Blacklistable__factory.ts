/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Blacklistable } from "../Blacklistable";

export class Blacklistable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Blacklistable> {
    return super.deploy(overrides || {}) as Promise<Blacklistable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Blacklistable {
    return super.attach(address) as Blacklistable;
  }
  connect(signer: Signer): Blacklistable__factory {
    return super.connect(signer) as Blacklistable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Blacklistable {
    return new Contract(address, _abi, signerOrProvider) as Blacklistable;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "addBlacklisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "dropBlacklisted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "blacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlacklist",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "isBlacklisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "unBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105f5806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100bd578063f2fde38b146100d8578063f9f92be4146100eb578063fe575a87146100fe57600080fd5b80631a89526614610082578063338d6c3014610097578063715018a6146100b5575b600080fd5b610095610090366004610544565b61013a565b005b61009f6101e2565b6040516100ac9190610572565b60405180910390f35b61009561029f565b6033546040516001600160a01b0390911681526020016100ac565b6100956100e6366004610544565b610343565b6100956100f9366004610544565b61045e565b61012a61010c366004610544565b6001600160a01b031660009081526066602052604090205460ff1690565b60405190151581526020016100ac565b6033546001600160a01b031633146101995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116600081815260666020526040808220805460ff19169055517ff226edb9dec9626cb6a1495a934e9dbd2ddb31c01194336f3d8a3d0bdd87f4219190a250565b6033546060906001600160a01b0316331461023f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610190565b606580548060200260200160405190810160405280929190818152602001828054801561029557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610277575b5050505050905090565b6033546001600160a01b031633146102f95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610190565b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6033546001600160a01b0316331461039d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610190565b6001600160a01b0381166104025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610190565b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146104b85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610190565b6001600160a01b038116600081815260666020526040808220805460ff1916600190811790915560658054918201815583527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c70180546001600160a01b03191684179055517f188efc1667c11c60d8fe0992fcba953703a7d99d689b3e25bcb1a800eddb8acd9190a250565b600060208284031215610555578081fd5b81356001600160a01b038116811461056b578182fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156105b35783516001600160a01b03168352928401929184019160010161058e565b5090969550505050505056fea264697066735822122089cccdd81b38cb0bd2b67c4adf25d28ef238844d7e092bbf062338fb6f1d2ffb64736f6c63430008040033";
