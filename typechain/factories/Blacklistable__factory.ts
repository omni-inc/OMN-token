/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Blacklistable } from "../Blacklistable";

export class Blacklistable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Blacklistable> {
    return super.deploy(overrides || {}) as Promise<Blacklistable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Blacklistable {
    return super.attach(address) as Blacklistable;
  }
  connect(signer: Signer): Blacklistable__factory {
    return super.connect(signer) as Blacklistable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Blacklistable {
    return new Contract(address, _abi, signerOrProvider) as Blacklistable;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "InBlacklisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "OutBlacklisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "addBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "dropBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlacklist",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "isBlacklisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106fd806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100bd5780639cfe42da146100d8578063f2fde38b146100eb578063fe575a87146100fe57600080fd5b8063338d6c3014610082578063715018a6146100a0578063882da331146100aa575b600080fd5b61008a61013a565b604051610097919061067a565b60405180910390f35b6100a861019c565b005b6100a86100b836600461064c565b610245565b6033546040516001600160a01b039091168152602001610097565b6100a86100e636600461064c565b610359565b6100a86100f936600461064c565b610531565b61012a61010c36600461064c565b6001600160a01b031660009081526066602052604090205460ff1690565b6040519015158152602001610097565b6060606580548060200260200160405190810160405280929190818152602001828054801561019257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610174575b5050505050905090565b6033546001600160a01b031633146101fb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b806001600160a01b0381166102b55760405162461bcd60e51b815260206004820152603060248201527f4552433230204f4d4e3a2077616c6c6574206d7573742062652064696666657260448201526f656e74207a65726f206164647265737360801b60648201526084016101f2565b6033546001600160a01b0316331461030f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101f2565b6001600160a01b038216600081815260666020526040808220805460ff19169055517f0b69455eaff3a6d5dbcb8cea85d607f306d08ce4cdcc8a164b07a877e53a5c019190a25050565b806001600160a01b0381166103c95760405162461bcd60e51b815260206004820152603060248201527f4552433230204f4d4e3a2077616c6c6574206d7573742062652064696666657260448201526f656e74207a65726f206164647265737360801b60648201526084016101f2565b6001600160a01b038216600090815260666020526040902054829060ff16156104495760405162461bcd60e51b815260206004820152602c60248201527f426c61636b6c69737461626c653a2073656e646572206163636f756e7420697360448201526b08189b1858dadb1a5cdd195960a21b60648201526084016101f2565b6033546001600160a01b031633146104a35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101f2565b6001600160a01b038316600081815260666020526040808220805460ff1916600190811790915560658054918201815583527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c70180546001600160a01b03191684179055517f8cfdb3b5a1b22bb4b4478f7ae6e8084f22cd24977a5cdedf9812c6dd1ac46e1b9190a2505050565b6033546001600160a01b0316331461058b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101f2565b6001600160a01b0381166105f05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f2565b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561065d578081fd5b81356001600160a01b0381168114610673578182fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156106bb5783516001600160a01b031683529284019291840191600101610696565b5090969550505050505056fea26469706673582212202e60944991615aac252514a6261f12c7abdd592a2208b752c59f5b2003b9bd8764736f6c63430008040033";
